/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture, MeshPortalMaterial, Sphere } from '@react-three/drei'
import { extend, useFrame } from '@react-three/fiber'
import * as THREE from 'three'

import { PortalMaterial } from './shaders/portal'
extend({ PortalMaterial })

export default function Portal(props) {
  const { nodes, materials } = useGLTF('/PortalSpider.glb')
  const portalMaterialRef = useRef()
  const ring1 = useRef()
  const ring2 = useRef()
  const ring3 = useRef()
  const ring4 = useRef()
  const bakedTexture1 = useTexture('/BakedTrees.jpg')
  const bakedTexture2 = useTexture('/BakedRocks.jpg')
  const bakedTexture3 = useTexture('/BakedScene.jpg')
  const bakedTexture4 = useTexture('/BakedSpider.jpg')

  useFrame((state, delta) => {
    portalMaterialRef.current.uTime += delta
    ring1.current.rotation.z += delta * 0.5
    ring2.current.rotation.z -= delta * 0.7
    ring3.current.rotation.z += delta * 0.5
    ring4.current.rotation.z -= delta * 0.3
  })

  return (
    <group {...props} dispose={null} rotation={[0, Math.PI, 0]} position={[0,-0.1,0]}>
      <mesh geometry={nodes.poleLightB.geometry} material-color={[3,0.5,0.38]} position={[-0.688, 0.762, 0.001]} rotation={[0, -1.538, 0]} />
      <mesh geometry={nodes.poleLightA.geometry} material-color={[3,0.5,0.38]} position={[0.734, 0.762, -0.813]} rotation={[-Math.PI, 1.556, -Math.PI]} />
      <mesh geometry={nodes.portalLight.geometry} position={[0, 0.948, 1.783]} rotation={[-Math.PI / 2, 0, 0]}>
        <MeshPortalMaterial transparent blend={0.0}>
          <ambientLight intensity={0.9} />
          <spotLight castShadow color={'orange'} intensity={2} position={[10, 15, 10]} angle={0.15} penumbra={1} shadow-normalBias={0.05} shadow-bias={0.0001} />
          <Sphere scale={0.7}>
            <portalMaterial ref={portalMaterialRef} side={THREE.BackSide}/>
          </Sphere>
          <mesh ref={ring1} scale={[0.2,0.2,0.2]} rotation={[Math.PI/2, 0, 0]} position={[0,-0.7,0]}>
            <torusGeometry args={[0.40, 0.09, 7, 6]}/>
            <meshToonMaterial color={'orange'} />
          </mesh>
          <mesh ref={ring2} scale={[0.5,0.5,0.5]} rotation={[Math.PI/2, 0, 0.8]} position={[0,-0.5,0]}>
            <torusGeometry args={[0.40, 0.05, 7, 6]}/>
            <meshToonMaterial color={'orange'} />
          </mesh>
          <mesh ref={ring3} scale={[1,1,1]} rotation={[Math.PI/2, 0, 1.7]} position={[0,-0.2,0]}>
            <torusGeometry args={[0.40, 0.04, 7, 6]}/>
            <meshToonMaterial color={'orange'} />
          </mesh>
          <mesh ref={ring4} scale={[1.5,1.5,1.5]} rotation={[Math.PI/2, 0, 2.4]}>
            <torusGeometry args={[0.40, 0.04, 7, 6]}/>
            <meshToonMaterial color={'orange'} />
          </mesh>
        </MeshPortalMaterial>
      </mesh>
      <mesh geometry={nodes.bakedTrees.geometry} position={[-1.424, 0.045, -0.261]}>
        <meshBasicMaterial map={bakedTexture1} map-flipY={false} />
      </mesh>
      <mesh geometry={nodes.bakedRocks.geometry} position={[-1.433, 0, 1.353]}>
        <meshBasicMaterial map={bakedTexture2} map-flipY={false} />
      </mesh>
      <mesh geometry={nodes.bakedScene.geometry} position={[-0.764, 0, -1.32]}>
        <meshBasicMaterial map={bakedTexture3} map-flipY={false} />
      </mesh>
      <mesh geometry={nodes.bakedSpider.geometry} position={[0.039, 0.007, -1.41]} rotation={[Math.PI / 2, 0, 1.595]}>
        <meshBasicMaterial map={bakedTexture4} map-flipY={false} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/PortalSpider.glb')
